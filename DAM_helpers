#-------------------------------------------------------------------------------
# Name:        Digital Asset Management program
# Purpose: Fill a table based on what is in a folder I want this to fill a table
#          so I can know what the underlying images are that make up an
#          institutions model also want to write something that will append new
#          information but and not delete or added new ones so that as I add new
#          material (either to the same file or read from different files I can
#          apply this. This portion is currently set up to write to a .csv* but
#          this will eventually be imported into Access (most likely just for
#          convience of interface use) therefore it would be good to write some
#          sequel for this as well which will go into another file
# Author:      pprzystupa
#
# Created:     15/02/2018
# Copyright:   (c) pprzystupa 2018
# Licence:     <your licence>
#-------------------------------------------------------------------------------

#These are the libraries that you need to have installed for this to work
import os
import exifread
from DAM_helpers import *
from os import listdir
from os.path import isfile, join

# get current script dir
#give it a place to be reading from (a particular folder)
# if data and the script are not in the same location,
# comment out the next line and replace 'path' with directory of your data
#C:\Users\pprzystupa\Documents\Spring_2018\DissertationResearch\California\Hoopa
pathDirectory = "C:\\Users\\pprzystupa\\Documents\\Spring_2018\\DissertationResearch\\Oklahoma\\Riverside"
path = "C:\\Users\\pprzystupa\\Documents\\Spring_2018\\DissertationResearch\\Oklahoma\\Riverside"

#Institution Code This will be used for all items unless the code at the beginning of the item is completely different then it will reatain a unique code
institutionCode = "RIS"

#create a document (.csv) for this information to be filled into
fileName = institutionCode + ".csv"

#create a list of files from the location
onlyInFiles = [f for f in listdir(path) if isfile(join(path, f))]
times = len(onlyInFiles) #Possibly count how many items are in the folder...

#Creates the Array to hold the line for each tiem
tableGrowing = []
numberOfFiles = 0
skippedFiles = 0

#for loop that cycles through the items in the list
for i in range(0, times):
    numberOfFiles = numberOfFiles+1 #counts the number of files to make sure all of them got looked at
    origName = str(onlyInFiles[i]) 	#Colunms: Original Name
    #these are temporary to indicate if the data was retreived or not
    year = "9999" 	#year
    month = "13"	#month
    day = "32"	#day
    docType = "TXT" #Material type
    metadata = [month,day,year]
    docType = areYouMyType(origName, docType)
    if "TXT" not in docType: #aka it is one of the acceptable types
      if docType == 'JPEG':
            metadata = getExifMetadata (origName, pathDirectory)
      else:
            metadata = getNameData(origName)  #call the same method but will have a unique institution code
      month = str(metadata[0]) #Set it to the month from metadata
      day = str(metadata[1]) #Set it to the day from metadata
      year = str(metadata[2]) #Set it to the year from metadata
      newLine = '\n' + origName + ',' + institutionCode + ',' + year + "," + month + "," + day + "," + docType
      tableGrowing.append(newLine)
    else: #if it's not an acceptable file type we skip over it because it won't have the sort of information we want or it won't be the sort of data I want to keep track of
        skippedFiles = skippedFiles + 1
        print origName +", I skipped that file"
        print "That makes %s skipped files" % skippedFiles

writeFile(fileName, tableGrowing, pathDirectory)
print 'done'
print numberOfFiles
