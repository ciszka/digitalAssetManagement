#-------------------------------------------------------------------------------
# Name:        Digital Asset Management program
# Purpose: Fill a table based on what is in a folder I want this to fill a table
#          so I can utilize this .txt file in a way that makes sense and is easy.
# Author:      pprzystupa
#
# Created:     17 May 2019
# Copyright:   (c) pprzystupa 2019
# Licence:     <your licence>
#-------------------------------------------------------------------------------

#These are the libraries that you need to have installed for this to work
import os #this comes with your computer
import crawlerHelpers

#Names, Extensions and the places where you might want to look to find your or to take stock of your files
pathdirectory = "H:\\" #aka where are the files
extension = ".txt" #Extension for the document that will hold the list of files
givenFileName =  "NewFileNameHere" #Place to put your file name for the list of files
newFileName = givenFileName + extension #combines what you want to call the file with the extension of hte file type that you want associated with it

#Make this an array and then have this be the first line added to the table growing
#Report run on: 	LA No.  	Discovering Activity: 	Site Name(s):    	Other Site No(s).:	Owner/Manager:	Site Type:	Occupation Type:	Source Graphics:	UTM Coordinates:	Town, if in limits:	County:	USGS Quad:	PLSS:	Dimensions:	Elevation:	Boundaries:	Depositional / Erosional Environment:	Stratigraphy:	Estimated Depth:	Depth Basis:	Observations:	Vegetation:	Topography:	Assemblage Size:	Dating  Potential:	Remarks:	Component	Features:	Feature Remarks:	General Site Comments:	Linked Activities:	Site Visits:	DOE Record:	Site Record Inventory:
fileNameHeadings = "Report run on,LA No,Discovering Activity,Site Name(s),Other Site No(s),Owner/Manager,Site Type,Occupation Type,Source Graphics,UTM Coordinates:,Town,County,USGS Quad,PLSS,Dimensions,Elevation,Boundaries,Depositional,Stratigraphy,Estimated Depth,Depth Basis,Observations,Vegetation,Topography,Assemblage,Dating  Potential,Remarks,Component	Features,Feature Remarks,General Site Comments,Linked Activities,Site Visits,DOE Record,Site Record Inventory"
headingsArray = makeHeadingsArray(fileNameHeadings)
correctHeadings = makeStringFromlist(headingsArray, "\t")

# beginning variables that will be filled with information from the pathways
tableGrowing = [] #a table of all files
numberOfFiles = 0 #counter to count the number of files
tableGrowing.append(correctHeadings) #Add that line to a growing array of what will be the table file

#open a text file or many
# need to use a for loop
#create a list of files from the location, aka how may forms am I going through
onlyInFiles = [f for f in listdir(path) if isfile(join(path, f))]
times = len(onlyInFiles) #Possibly count how many items are in the folder...

#Read through it
for i in range(0, times):
    numberOfFiles = numberOfFiles+1 #counts the number of files to make sure all of them got looked at
    origName = str(onlyInFiles[i])
    workingFile = readWorkingFile(pathdirectory, origName)
    newLine = ""
    for j in range(0, len(newHeadingsArray)):     #Get certain types of information that are standardized from PDFs or other sources by having an array of the headings and for each header in the list of headers:         #Cycle through the array Get everything after the thing in the array until the next thing in the arrray
        startHeading = headingsArray[j] #Get the header #Find the header in the text file
        headingInformation = ""
        firstIndex = wholeFile.find(startHeading)+len(startHeading)+1 #this will give me the index of the first character in that particular string
        try: #if we are not at the end of the doucment do this
            endHeading = wholeFile.find(newHeadingsArray[j+1]) #Look at the next header and find that header's location in the text file
        except: #if we are at the end of the document do this
            endHeading = len(wholeFile) #Look at the next header     	#Find that header's location in the text file
        headingInformation = wholeFile[firstIndex:endHeading] #Get everything between Header 1 and Header 2
        noTabsHeading = headingInformation.split()
        headingInformation = makeStringFromlist(noTabsHeading, " ")
        newLine = newLine + headingInformation.strip() + "\t" #Add that to a concatenating string that is the line and strip out any excess commas or quotation marks    print newLine
    tableGrowing.append(newLine) #Add that line to a growing array of what will be the table file

#Write the new table file
writeFile(newFileName, tableGrowing, pathdirectory, fileNameHeadings)
